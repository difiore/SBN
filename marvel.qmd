---
title: "Marvel"
format:
  html:
    embed-resources: true
    code-overflow: wrap
    code-block-bg: true
    code-block-border-left: "#31BAE9"
    code-summary: "Code hint"
editor_options: 
  chunk_output_type: console
---

```{r}
# define rescale function
rescale <- function(variable, low, high) {
  min_d <- min(variable)
  max_d <- max(variable)
  rescaled <- ((high-low) * (variable - min_d)) / (max_d-min_d) + low
  return(rescaled)
}
```

```{r}
#| message: false
library(tidyverse)
library(igraph)
library(visNetwork)
v <- read_csv("data/marvel-unimodal-nodes.csv", col_names = TRUE)
e <- read_csv("data/marvel-unimodal-edges.csv", col_names = TRUE)

edges <- filter(e, Weight > 100)
edges <- rename(edges, from = Source, to = Target, weight = Weight)
vertices <- unique(c(edges$from, edges$to))

graph <- graph_from_data_frame(
  d = edges,
  vertices = vertices,
  directed = TRUE)
graph

graph <- simplify(graph, remove.loops = TRUE, remove.multiple = TRUE)

V(graph)$size <- rescale(igraph::betweenness(graph), 10, 50) # set size in igraph to betweeness

visIgraph(graph,
          smooth = TRUE,
          layout = "layout_with_kk",
          randomSeed = 42)

# or
vis_graph <- toVisNetworkData(graph, idToLabel = TRUE)

visNetwork(
  vis_graph$nodes,
  vis_graph$edges
  ) %>%
  visEdges(arrows ="to") %>%
  visPhysics(solver = "forceAtlas2Based") %>%
  visLayout(randomSeed = 42)
```
